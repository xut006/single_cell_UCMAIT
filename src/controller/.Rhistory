knitr::opts_knit$set(global.par = TRUE)
library(plyr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(gplots)
library(gtools)
library(stats)
library(lattice)
library(latticeExtra)
library(grid)
library(gridExtra)
library(Rtsne)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_UCMAIT/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_insulin/.*", "single_cell_insulin/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadUCMAIT.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## load data
ctTable <- dataLoadUCMAIT()
## remove blood samples for now
#ctTable <- subset(ctTable, cellSource != "PB")
View(ctTable)
## remove blood samples for now
ctTable <- subset(ctTable, cellSource != "blood")
View(ctTable)
View(ctTable)
knitr::opts_knit$set(global.par = TRUE)
library(plyr)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(gplots)
library(gtools)
library(stats)
library(lattice)
library(latticeExtra)
library(grid)
library(gridExtra)
library(Rtsne)
## set baseDir if Knitting with RStudio button
baseDir <- "~/Desktop/Su Lab/single_cell_UCMAIT/"
## sets path if run from runAnalysis.R
#currentFile <- rstudioapi::getActiveDocumentContext()$path
#baseDir <- gsub("single_cell_insulin/.*", "single_cell_insulin/", currentFile)
#### source function scripts ####
funcDir <- paste(baseDir, "src/functions/", sep="")
funcFiles <- c("formatRaw.R",
"dataLoadUCMAIT.R",
"cleanCt.R",
"geneSetEnrichment.R",
"violinPlot.R",
"heatmap2_custom.R",
"heatmap.3.R",
"clusterFilter.R",
"tableBarPlots.R",
"clusterReport.R",
"reportViolins.R",
"reportTSNE.R",
"plotTSNE.R")
funcFiles <- paste(funcDir, funcFiles, sep="")
for(file in funcFiles){
source(file)
}
## load data
ctTable <- dataLoadUCMAIT()
## remove blood samples for now
# ctTable <- subset(ctTable, cellSource != "blood")
## remove tissue samples for now
ctTable <- subset(ctTable, cellSource != "tissue")
# adjust the tag for blood_only analysis
ctTable[grep("UCM", ctTable$probe, fixed=TRUE), "age"] <- "UCM"
ctTable[grep("NBD", ctTable$probe, fixed=TRUE), "age"] <- "NBD"
## calculate log2Ex, reformat ctTable, and normalize values
ctNorm <- cleanCt(ctTable, summaryOutput=T, cumExpCutoff = F, normGene = "none")
## cluster and filter
ctClust <- clusterFilter(ctNorm, testK = T, numCenters = 4, plotHeatmap=T, plotClustOnly=F,
heatmapFactor = "kmeans.cluster", heatmapColorBy = c("age", "probe"),
heatmapTissueLabel = "UCMAIT samples",
fisherTests = c("probe", "age"),
# fisherTests = NULL,
cumulativeExpHist = T, filterClusters = T, clustersToRemove = c(3))
View(ctNorm)
grep("UCM", ctTable$age, fixed=TRUE)
grep("UCM", ctNorm$age, fixed=TRUE)
## cluster and filter
ctClust <- clusterFilter(ctNorm, testK = T, numCenters = 4, plotHeatmap=T, plotClustOnly=F,
heatmapFactor = "kmeans.cluster", heatmapColorBy = c("age", "probe"),
heatmapTissueLabel = "UCMAIT samples",
fisherTests = c("probe", "age"),
# fisherTests = NULL,
cumulativeExpHist = T, filterClusters = T, clustersToRemove = c(3))
